/*
Conekta API

Testing ApiKeysApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package conekta_test

import (
	"context"
	"testing"

	"github.com/conekta/conekta-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_conekta_ApiKeysApiService(t *testing.T) {

	configuration := conekta.NewConfiguration()
	configuration.Host = _basePath
	configuration.Scheme = "http"
	apiClient := conekta.NewAPIClient(configuration)

	t.Run("Test ApiKeysApiService CreateApiKey", func(t *testing.T) {
		rq := conekta.ApiKeyRequest{
			Description: conekta.PtrString("description"),
			Role:        "admin",
		}
		resp, httpRes, err := apiClient.ApiKeysApi.CreateApiKey(context.TODO()).
			ApiKeyRequest(rq).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeysApiService DeleteApiKey", func(t *testing.T) {
		resp, httpRes, err := apiClient.ApiKeysApi.DeleteApiKey(context.TODO(), "64625cc9f3e02c00163f5e4d").
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeysApiService GetApiKey", func(t *testing.T) {
		resp, httpRes, err := apiClient.ApiKeysApi.GetApiKey(context.TODO(), "64625cc9f3e02c00163f5e4d").
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeysApiService GetApiKeys", func(t *testing.T) {
		resp, httpRes, err := apiClient.ApiKeysApi.GetApiKeys(context.TODO()).
			Limit(20).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ApiKeysApiService UpdateApiKey", func(t *testing.T) {
		rq := conekta.ApiKeyUpdateRequest{
			Active:      conekta.PtrBool(false),
			Description: conekta.PtrString("description"),
		}
		resp, httpRes, err := apiClient.ApiKeysApi.UpdateApiKey(context.TODO(), "64625cc9f3e02c00163f5e4d").
			ApiKeyUpdateRequest(rq).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
