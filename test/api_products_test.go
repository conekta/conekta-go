/*
Conekta API

Testing ProductsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package conekta_test

import (
	"context"
	"testing"

	"github.com/conekta/conekta-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_conekta_ProductsApiService(t *testing.T) {

	configuration := conekta.NewConfiguration()
	configuration.Host = _basePath
	configuration.Scheme = "http"
	apiClient := conekta.NewAPIClient(configuration)

	t.Run("Test ProductsApiService OrdersCreateProduct", func(t *testing.T) {
		req := conekta.Product{
			Name:     "Test Product",
			Quantity: 1,
		}
		resp, httpRes, err := apiClient.ProductsApi.OrdersCreateProduct(context.TODO(), "ord_2tUigJ8DgBhbp6w5D").
			Product(req).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductsApiService OrdersDeleteProduct", func(t *testing.T) {
		resp, httpRes, err := apiClient.ProductsApi.OrdersDeleteProduct(context.TODO(), "ord_2tUigJ8DgBhbp6w5D", "line_item_2tVz8UkyWhSxLfUd7").
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProductsApiService OrdersUpdateProduct", func(t *testing.T) {
		req := conekta.UpdateProduct{
			Name:     conekta.PtrString("Test Product"),
			Quantity: conekta.PtrInt32(1),
		}
		resp, httpRes, err := apiClient.ProductsApi.OrdersUpdateProduct(context.TODO(), "ord_2tUigJ8DgBhbp6w5D", "line_item_2tVz8UkyWhSxLfUd7").
			UpdateProduct(req).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
