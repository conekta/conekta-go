/*
Conekta API

Conekta sdk

API version: 2.1.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PayoutOrderResponseCustomerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayoutOrderResponseCustomerInfo{}

// PayoutOrderResponseCustomerInfo The customer information of the payout order.
type PayoutOrderResponseCustomerInfo struct {
	// Custom reference
	CustomerCustomReference NullableString `json:"customer_custom_reference,omitempty"`
	Name *string `json:"name,omitempty"`
	Email *string `json:"email,omitempty"`
	Phone *string `json:"phone,omitempty"`
	Corporate *bool `json:"corporate,omitempty"`
	Object *string `json:"object,omitempty"`
	// The id of the customer.
	Id string `json:"id"`
}

type _PayoutOrderResponseCustomerInfo PayoutOrderResponseCustomerInfo

// NewPayoutOrderResponseCustomerInfo instantiates a new PayoutOrderResponseCustomerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutOrderResponseCustomerInfo(id string) *PayoutOrderResponseCustomerInfo {
	this := PayoutOrderResponseCustomerInfo{}
	var corporate bool = false
	this.Corporate = &corporate
	this.Id = id
	return &this
}

// NewPayoutOrderResponseCustomerInfoWithDefaults instantiates a new PayoutOrderResponseCustomerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutOrderResponseCustomerInfoWithDefaults() *PayoutOrderResponseCustomerInfo {
	this := PayoutOrderResponseCustomerInfo{}
	var corporate bool = false
	this.Corporate = &corporate
	return &this
}

// GetCustomerCustomReference returns the CustomerCustomReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PayoutOrderResponseCustomerInfo) GetCustomerCustomReference() string {
	if o == nil || IsNil(o.CustomerCustomReference.Get()) {
		var ret string
		return ret
	}
	return *o.CustomerCustomReference.Get()
}

// GetCustomerCustomReferenceOk returns a tuple with the CustomerCustomReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayoutOrderResponseCustomerInfo) GetCustomerCustomReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomerCustomReference.Get(), o.CustomerCustomReference.IsSet()
}

// HasCustomerCustomReference returns a boolean if a field has been set.
func (o *PayoutOrderResponseCustomerInfo) HasCustomerCustomReference() bool {
	if o != nil && o.CustomerCustomReference.IsSet() {
		return true
	}

	return false
}

// SetCustomerCustomReference gets a reference to the given NullableString and assigns it to the CustomerCustomReference field.
func (o *PayoutOrderResponseCustomerInfo) SetCustomerCustomReference(v string) {
	o.CustomerCustomReference.Set(&v)
}
// SetCustomerCustomReferenceNil sets the value for CustomerCustomReference to be an explicit nil
func (o *PayoutOrderResponseCustomerInfo) SetCustomerCustomReferenceNil() {
	o.CustomerCustomReference.Set(nil)
}

// UnsetCustomerCustomReference ensures that no value is present for CustomerCustomReference, not even an explicit nil
func (o *PayoutOrderResponseCustomerInfo) UnsetCustomerCustomReference() {
	o.CustomerCustomReference.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PayoutOrderResponseCustomerInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutOrderResponseCustomerInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PayoutOrderResponseCustomerInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PayoutOrderResponseCustomerInfo) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PayoutOrderResponseCustomerInfo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutOrderResponseCustomerInfo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PayoutOrderResponseCustomerInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PayoutOrderResponseCustomerInfo) SetEmail(v string) {
	o.Email = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PayoutOrderResponseCustomerInfo) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutOrderResponseCustomerInfo) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PayoutOrderResponseCustomerInfo) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PayoutOrderResponseCustomerInfo) SetPhone(v string) {
	o.Phone = &v
}

// GetCorporate returns the Corporate field value if set, zero value otherwise.
func (o *PayoutOrderResponseCustomerInfo) GetCorporate() bool {
	if o == nil || IsNil(o.Corporate) {
		var ret bool
		return ret
	}
	return *o.Corporate
}

// GetCorporateOk returns a tuple with the Corporate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutOrderResponseCustomerInfo) GetCorporateOk() (*bool, bool) {
	if o == nil || IsNil(o.Corporate) {
		return nil, false
	}
	return o.Corporate, true
}

// HasCorporate returns a boolean if a field has been set.
func (o *PayoutOrderResponseCustomerInfo) HasCorporate() bool {
	if o != nil && !IsNil(o.Corporate) {
		return true
	}

	return false
}

// SetCorporate gets a reference to the given bool and assigns it to the Corporate field.
func (o *PayoutOrderResponseCustomerInfo) SetCorporate(v bool) {
	o.Corporate = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *PayoutOrderResponseCustomerInfo) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutOrderResponseCustomerInfo) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *PayoutOrderResponseCustomerInfo) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *PayoutOrderResponseCustomerInfo) SetObject(v string) {
	o.Object = &v
}

// GetId returns the Id field value
func (o *PayoutOrderResponseCustomerInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PayoutOrderResponseCustomerInfo) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PayoutOrderResponseCustomerInfo) SetId(v string) {
	o.Id = v
}

func (o PayoutOrderResponseCustomerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayoutOrderResponseCustomerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerCustomReference.IsSet() {
		toSerialize["customer_custom_reference"] = o.CustomerCustomReference.Get()
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Corporate) {
		toSerialize["corporate"] = o.Corporate
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *PayoutOrderResponseCustomerInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPayoutOrderResponseCustomerInfo := _PayoutOrderResponseCustomerInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPayoutOrderResponseCustomerInfo)

	if err != nil {
		return err
	}

	*o = PayoutOrderResponseCustomerInfo(varPayoutOrderResponseCustomerInfo)

	return err
}

type NullablePayoutOrderResponseCustomerInfo struct {
	value *PayoutOrderResponseCustomerInfo
	isSet bool
}

func (v NullablePayoutOrderResponseCustomerInfo) Get() *PayoutOrderResponseCustomerInfo {
	return v.value
}

func (v *NullablePayoutOrderResponseCustomerInfo) Set(val *PayoutOrderResponseCustomerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutOrderResponseCustomerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutOrderResponseCustomerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutOrderResponseCustomerInfo(val *PayoutOrderResponseCustomerInfo) *NullablePayoutOrderResponseCustomerInfo {
	return &NullablePayoutOrderResponseCustomerInfo{value: val, isSet: true}
}

func (v NullablePayoutOrderResponseCustomerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutOrderResponseCustomerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


