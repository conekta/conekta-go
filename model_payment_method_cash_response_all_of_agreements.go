/*
Conekta API

Conekta sdk

API version: 2.2.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
)

// checks if the PaymentMethodCashResponseAllOfAgreements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodCashResponseAllOfAgreements{}

// PaymentMethodCashResponseAllOfAgreements struct for PaymentMethodCashResponseAllOfAgreements
type PaymentMethodCashResponseAllOfAgreements struct {
	// Agreement number, you can use this number to pay in the store/bbva
	Agreement *string `json:"agreement,omitempty"`
	// Provider name, you can use this to know where to pay
	Provider *string `json:"provider,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethodCashResponseAllOfAgreements PaymentMethodCashResponseAllOfAgreements

// NewPaymentMethodCashResponseAllOfAgreements instantiates a new PaymentMethodCashResponseAllOfAgreements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodCashResponseAllOfAgreements() *PaymentMethodCashResponseAllOfAgreements {
	this := PaymentMethodCashResponseAllOfAgreements{}
	return &this
}

// NewPaymentMethodCashResponseAllOfAgreementsWithDefaults instantiates a new PaymentMethodCashResponseAllOfAgreements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodCashResponseAllOfAgreementsWithDefaults() *PaymentMethodCashResponseAllOfAgreements {
	this := PaymentMethodCashResponseAllOfAgreements{}
	return &this
}

// GetAgreement returns the Agreement field value if set, zero value otherwise.
func (o *PaymentMethodCashResponseAllOfAgreements) GetAgreement() string {
	if o == nil || IsNil(o.Agreement) {
		var ret string
		return ret
	}
	return *o.Agreement
}

// GetAgreementOk returns a tuple with the Agreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodCashResponseAllOfAgreements) GetAgreementOk() (*string, bool) {
	if o == nil || IsNil(o.Agreement) {
		return nil, false
	}
	return o.Agreement, true
}

// HasAgreement returns a boolean if a field has been set.
func (o *PaymentMethodCashResponseAllOfAgreements) HasAgreement() bool {
	if o != nil && !IsNil(o.Agreement) {
		return true
	}

	return false
}

// SetAgreement gets a reference to the given string and assigns it to the Agreement field.
func (o *PaymentMethodCashResponseAllOfAgreements) SetAgreement(v string) {
	o.Agreement = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *PaymentMethodCashResponseAllOfAgreements) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodCashResponseAllOfAgreements) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *PaymentMethodCashResponseAllOfAgreements) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *PaymentMethodCashResponseAllOfAgreements) SetProvider(v string) {
	o.Provider = &v
}

func (o PaymentMethodCashResponseAllOfAgreements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodCashResponseAllOfAgreements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Agreement) {
		toSerialize["agreement"] = o.Agreement
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethodCashResponseAllOfAgreements) UnmarshalJSON(data []byte) (err error) {
	varPaymentMethodCashResponseAllOfAgreements := _PaymentMethodCashResponseAllOfAgreements{}

	err = json.Unmarshal(data, &varPaymentMethodCashResponseAllOfAgreements)

	if err != nil {
		return err
	}

	*o = PaymentMethodCashResponseAllOfAgreements(varPaymentMethodCashResponseAllOfAgreements)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agreement")
		delete(additionalProperties, "provider")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethodCashResponseAllOfAgreements struct {
	value *PaymentMethodCashResponseAllOfAgreements
	isSet bool
}

func (v NullablePaymentMethodCashResponseAllOfAgreements) Get() *PaymentMethodCashResponseAllOfAgreements {
	return v.value
}

func (v *NullablePaymentMethodCashResponseAllOfAgreements) Set(val *PaymentMethodCashResponseAllOfAgreements) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodCashResponseAllOfAgreements) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodCashResponseAllOfAgreements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodCashResponseAllOfAgreements(val *PaymentMethodCashResponseAllOfAgreements) *NullablePaymentMethodCashResponseAllOfAgreements {
	return &NullablePaymentMethodCashResponseAllOfAgreements{value: val, isSet: true}
}

func (v NullablePaymentMethodCashResponseAllOfAgreements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodCashResponseAllOfAgreements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


