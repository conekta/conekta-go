/*
Conekta API

Conekta sdk

API version: 2.2.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentMethodCardRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodCardRequest{}

// PaymentMethodCardRequest struct for PaymentMethodCardRequest
type PaymentMethodCardRequest struct {
	// Type of payment method
	Type string `json:"type"`
	// Card security code
	Cvc string `json:"cvc"`
	// Card expiration month
	ExpMonth string `json:"exp_month"`
	// Card expiration year
	ExpYear string `json:"exp_year"`
	// Cardholder name
	Name string `json:"name"`
	// Card number
	Number string `json:"number"`
	// Optional field used to capture the customer's IP address for fraud prevention and security monitoring purposes
	CustomerIpAddress *string `json:"customer_ip_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethodCardRequest PaymentMethodCardRequest

// NewPaymentMethodCardRequest instantiates a new PaymentMethodCardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodCardRequest(type_ string, cvc string, expMonth string, expYear string, name string, number string) *PaymentMethodCardRequest {
	this := PaymentMethodCardRequest{}
	this.Type = type_
	this.Cvc = cvc
	this.ExpMonth = expMonth
	this.ExpYear = expYear
	this.Name = name
	this.Number = number
	return &this
}

// NewPaymentMethodCardRequestWithDefaults instantiates a new PaymentMethodCardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodCardRequestWithDefaults() *PaymentMethodCardRequest {
	this := PaymentMethodCardRequest{}
	return &this
}

// GetType returns the Type field value
func (o *PaymentMethodCardRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PaymentMethodCardRequest) SetType(v string) {
	o.Type = v
}

// GetCvc returns the Cvc field value
func (o *PaymentMethodCardRequest) GetCvc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cvc
}

// GetCvcOk returns a tuple with the Cvc field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetCvcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cvc, true
}

// SetCvc sets field value
func (o *PaymentMethodCardRequest) SetCvc(v string) {
	o.Cvc = v
}

// GetExpMonth returns the ExpMonth field value
func (o *PaymentMethodCardRequest) GetExpMonth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpMonth
}

// GetExpMonthOk returns a tuple with the ExpMonth field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetExpMonthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpMonth, true
}

// SetExpMonth sets field value
func (o *PaymentMethodCardRequest) SetExpMonth(v string) {
	o.ExpMonth = v
}

// GetExpYear returns the ExpYear field value
func (o *PaymentMethodCardRequest) GetExpYear() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpYear
}

// GetExpYearOk returns a tuple with the ExpYear field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetExpYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpYear, true
}

// SetExpYear sets field value
func (o *PaymentMethodCardRequest) SetExpYear(v string) {
	o.ExpYear = v
}

// GetName returns the Name field value
func (o *PaymentMethodCardRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PaymentMethodCardRequest) SetName(v string) {
	o.Name = v
}

// GetNumber returns the Number field value
func (o *PaymentMethodCardRequest) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *PaymentMethodCardRequest) SetNumber(v string) {
	o.Number = v
}

// GetCustomerIpAddress returns the CustomerIpAddress field value if set, zero value otherwise.
func (o *PaymentMethodCardRequest) GetCustomerIpAddress() string {
	if o == nil || IsNil(o.CustomerIpAddress) {
		var ret string
		return ret
	}
	return *o.CustomerIpAddress
}

// GetCustomerIpAddressOk returns a tuple with the CustomerIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodCardRequest) GetCustomerIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerIpAddress) {
		return nil, false
	}
	return o.CustomerIpAddress, true
}

// HasCustomerIpAddress returns a boolean if a field has been set.
func (o *PaymentMethodCardRequest) HasCustomerIpAddress() bool {
	if o != nil && !IsNil(o.CustomerIpAddress) {
		return true
	}

	return false
}

// SetCustomerIpAddress gets a reference to the given string and assigns it to the CustomerIpAddress field.
func (o *PaymentMethodCardRequest) SetCustomerIpAddress(v string) {
	o.CustomerIpAddress = &v
}

func (o PaymentMethodCardRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodCardRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["cvc"] = o.Cvc
	toSerialize["exp_month"] = o.ExpMonth
	toSerialize["exp_year"] = o.ExpYear
	toSerialize["name"] = o.Name
	toSerialize["number"] = o.Number
	if !IsNil(o.CustomerIpAddress) {
		toSerialize["customer_ip_address"] = o.CustomerIpAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethodCardRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"cvc",
		"exp_month",
		"exp_year",
		"name",
		"number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentMethodCardRequest := _PaymentMethodCardRequest{}

	err = json.Unmarshal(data, &varPaymentMethodCardRequest)

	if err != nil {
		return err
	}

	*o = PaymentMethodCardRequest(varPaymentMethodCardRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "cvc")
		delete(additionalProperties, "exp_month")
		delete(additionalProperties, "exp_year")
		delete(additionalProperties, "name")
		delete(additionalProperties, "number")
		delete(additionalProperties, "customer_ip_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethodCardRequest struct {
	value *PaymentMethodCardRequest
	isSet bool
}

func (v NullablePaymentMethodCardRequest) Get() *PaymentMethodCardRequest {
	return v.value
}

func (v *NullablePaymentMethodCardRequest) Set(val *PaymentMethodCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodCardRequest(val *PaymentMethodCardRequest) *NullablePaymentMethodCardRequest {
	return &NullablePaymentMethodCardRequest{value: val, isSet: true}
}

func (v NullablePaymentMethodCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


