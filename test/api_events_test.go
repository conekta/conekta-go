/*
Conekta API

Testing EventsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package conekta_test

import (
	"context"
	"testing"

	"github.com/conekta/conekta-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_conekta_EventsApiService(t *testing.T) {

	configuration := conekta.NewConfiguration()
	configuration.Host = _basePath
	configuration.Scheme = "http"
	apiClient := conekta.NewAPIClient(configuration)

	t.Run("Test EventsApiService GetEvent", func(t *testing.T) {
		resp, httpRes, err := apiClient.EventsApi.GetEvent(context.TODO(), "63fe3d2ddf70970001cfb41a").
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsApiService GetEvents", func(t *testing.T) {
		resp, httpRes, err := apiClient.EventsApi.GetEvents(context.TODO()).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EventsApiService ResendEvent", func(t *testing.T) {
		resp, httpRes, err := apiClient.EventsApi.ResendEvent(context.TODO(), "6463d6e35a4c3e001819e760", "webhl_2tsv6NzWJHBWCkqGt").
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
