/*
Conekta API

Conekta sdk

API version: 2.2.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
)

// checks if the CreateCompanyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCompanyRequest{}

// CreateCompanyRequest struct for CreateCompanyRequest
type CreateCompanyRequest struct {
	// The name of the company.
	Name *string `json:"name,omitempty"`
	// The type of company, 'owner'
	TypeCompany *string `json:"type_company,omitempty"`
	ComercialInfo *CreateCompanyRequestComercialInfo `json:"comercial_info,omitempty"`
	FiscalInfo *CreateCompanyRequestFiscalInfo `json:"fiscal_info,omitempty"`
	BankAccountInfo *CreateCompanyRequestBankAccountInfo `json:"bank_account_info,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateCompanyRequest CreateCompanyRequest

// NewCreateCompanyRequest instantiates a new CreateCompanyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCompanyRequest() *CreateCompanyRequest {
	this := CreateCompanyRequest{}
	return &this
}

// NewCreateCompanyRequestWithDefaults instantiates a new CreateCompanyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCompanyRequestWithDefaults() *CreateCompanyRequest {
	this := CreateCompanyRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateCompanyRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateCompanyRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateCompanyRequest) SetName(v string) {
	o.Name = &v
}

// GetTypeCompany returns the TypeCompany field value if set, zero value otherwise.
func (o *CreateCompanyRequest) GetTypeCompany() string {
	if o == nil || IsNil(o.TypeCompany) {
		var ret string
		return ret
	}
	return *o.TypeCompany
}

// GetTypeCompanyOk returns a tuple with the TypeCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequest) GetTypeCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.TypeCompany) {
		return nil, false
	}
	return o.TypeCompany, true
}

// HasTypeCompany returns a boolean if a field has been set.
func (o *CreateCompanyRequest) HasTypeCompany() bool {
	if o != nil && !IsNil(o.TypeCompany) {
		return true
	}

	return false
}

// SetTypeCompany gets a reference to the given string and assigns it to the TypeCompany field.
func (o *CreateCompanyRequest) SetTypeCompany(v string) {
	o.TypeCompany = &v
}

// GetComercialInfo returns the ComercialInfo field value if set, zero value otherwise.
func (o *CreateCompanyRequest) GetComercialInfo() CreateCompanyRequestComercialInfo {
	if o == nil || IsNil(o.ComercialInfo) {
		var ret CreateCompanyRequestComercialInfo
		return ret
	}
	return *o.ComercialInfo
}

// GetComercialInfoOk returns a tuple with the ComercialInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequest) GetComercialInfoOk() (*CreateCompanyRequestComercialInfo, bool) {
	if o == nil || IsNil(o.ComercialInfo) {
		return nil, false
	}
	return o.ComercialInfo, true
}

// HasComercialInfo returns a boolean if a field has been set.
func (o *CreateCompanyRequest) HasComercialInfo() bool {
	if o != nil && !IsNil(o.ComercialInfo) {
		return true
	}

	return false
}

// SetComercialInfo gets a reference to the given CreateCompanyRequestComercialInfo and assigns it to the ComercialInfo field.
func (o *CreateCompanyRequest) SetComercialInfo(v CreateCompanyRequestComercialInfo) {
	o.ComercialInfo = &v
}

// GetFiscalInfo returns the FiscalInfo field value if set, zero value otherwise.
func (o *CreateCompanyRequest) GetFiscalInfo() CreateCompanyRequestFiscalInfo {
	if o == nil || IsNil(o.FiscalInfo) {
		var ret CreateCompanyRequestFiscalInfo
		return ret
	}
	return *o.FiscalInfo
}

// GetFiscalInfoOk returns a tuple with the FiscalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequest) GetFiscalInfoOk() (*CreateCompanyRequestFiscalInfo, bool) {
	if o == nil || IsNil(o.FiscalInfo) {
		return nil, false
	}
	return o.FiscalInfo, true
}

// HasFiscalInfo returns a boolean if a field has been set.
func (o *CreateCompanyRequest) HasFiscalInfo() bool {
	if o != nil && !IsNil(o.FiscalInfo) {
		return true
	}

	return false
}

// SetFiscalInfo gets a reference to the given CreateCompanyRequestFiscalInfo and assigns it to the FiscalInfo field.
func (o *CreateCompanyRequest) SetFiscalInfo(v CreateCompanyRequestFiscalInfo) {
	o.FiscalInfo = &v
}

// GetBankAccountInfo returns the BankAccountInfo field value if set, zero value otherwise.
func (o *CreateCompanyRequest) GetBankAccountInfo() CreateCompanyRequestBankAccountInfo {
	if o == nil || IsNil(o.BankAccountInfo) {
		var ret CreateCompanyRequestBankAccountInfo
		return ret
	}
	return *o.BankAccountInfo
}

// GetBankAccountInfoOk returns a tuple with the BankAccountInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequest) GetBankAccountInfoOk() (*CreateCompanyRequestBankAccountInfo, bool) {
	if o == nil || IsNil(o.BankAccountInfo) {
		return nil, false
	}
	return o.BankAccountInfo, true
}

// HasBankAccountInfo returns a boolean if a field has been set.
func (o *CreateCompanyRequest) HasBankAccountInfo() bool {
	if o != nil && !IsNil(o.BankAccountInfo) {
		return true
	}

	return false
}

// SetBankAccountInfo gets a reference to the given CreateCompanyRequestBankAccountInfo and assigns it to the BankAccountInfo field.
func (o *CreateCompanyRequest) SetBankAccountInfo(v CreateCompanyRequestBankAccountInfo) {
	o.BankAccountInfo = &v
}

func (o CreateCompanyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCompanyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TypeCompany) {
		toSerialize["type_company"] = o.TypeCompany
	}
	if !IsNil(o.ComercialInfo) {
		toSerialize["comercial_info"] = o.ComercialInfo
	}
	if !IsNil(o.FiscalInfo) {
		toSerialize["fiscal_info"] = o.FiscalInfo
	}
	if !IsNil(o.BankAccountInfo) {
		toSerialize["bank_account_info"] = o.BankAccountInfo
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCompanyRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateCompanyRequest := _CreateCompanyRequest{}

	err = json.Unmarshal(data, &varCreateCompanyRequest)

	if err != nil {
		return err
	}

	*o = CreateCompanyRequest(varCreateCompanyRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "type_company")
		delete(additionalProperties, "comercial_info")
		delete(additionalProperties, "fiscal_info")
		delete(additionalProperties, "bank_account_info")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCompanyRequest struct {
	value *CreateCompanyRequest
	isSet bool
}

func (v NullableCreateCompanyRequest) Get() *CreateCompanyRequest {
	return v.value
}

func (v *NullableCreateCompanyRequest) Set(val *CreateCompanyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCompanyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCompanyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCompanyRequest(val *CreateCompanyRequest) *NullableCreateCompanyRequest {
	return &NullableCreateCompanyRequest{value: val, isSet: true}
}

func (v NullableCreateCompanyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCompanyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


