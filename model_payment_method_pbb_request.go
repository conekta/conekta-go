/*
Conekta API

Conekta sdk

API version: 2.2.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentMethodPbbRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodPbbRequest{}

// PaymentMethodPbbRequest struct for PaymentMethodPbbRequest
type PaymentMethodPbbRequest struct {
	// Type of the payment method
	Type string `json:"type"`
	// Expiration date of the payment method, in Unix timestamp format
	ExpiresAt *int64 `json:"expires_at,omitempty"`
	// Product type of the payment method, use for the payment method to know the product type
	ProductType          string `json:"product_type"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethodPbbRequest PaymentMethodPbbRequest

// NewPaymentMethodPbbRequest instantiates a new PaymentMethodPbbRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodPbbRequest(type_ string, productType string) *PaymentMethodPbbRequest {
	this := PaymentMethodPbbRequest{}
	this.Type = type_
	this.ProductType = productType
	return &this
}

// NewPaymentMethodPbbRequestWithDefaults instantiates a new PaymentMethodPbbRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodPbbRequestWithDefaults() *PaymentMethodPbbRequest {
	this := PaymentMethodPbbRequest{}
	return &this
}

// GetType returns the Type field value
func (o *PaymentMethodPbbRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodPbbRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PaymentMethodPbbRequest) SetType(v string) {
	o.Type = v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *PaymentMethodPbbRequest) GetExpiresAt() int64 {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret int64
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodPbbRequest) GetExpiresAtOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PaymentMethodPbbRequest) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given int64 and assigns it to the ExpiresAt field.
func (o *PaymentMethodPbbRequest) SetExpiresAt(v int64) {
	o.ExpiresAt = &v
}

// GetProductType returns the ProductType field value
func (o *PaymentMethodPbbRequest) GetProductType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodPbbRequest) GetProductTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductType, true
}

// SetProductType sets field value
func (o *PaymentMethodPbbRequest) SetProductType(v string) {
	o.ProductType = v
}

func (o PaymentMethodPbbRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodPbbRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	toSerialize["product_type"] = o.ProductType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethodPbbRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"product_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentMethodPbbRequest := _PaymentMethodPbbRequest{}

	err = json.Unmarshal(data, &varPaymentMethodPbbRequest)

	if err != nil {
		return err
	}

	*o = PaymentMethodPbbRequest(varPaymentMethodPbbRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "product_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethodPbbRequest struct {
	value *PaymentMethodPbbRequest
	isSet bool
}

func (v NullablePaymentMethodPbbRequest) Get() *PaymentMethodPbbRequest {
	return v.value
}

func (v *NullablePaymentMethodPbbRequest) Set(val *PaymentMethodPbbRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodPbbRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodPbbRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodPbbRequest(val *PaymentMethodPbbRequest) *NullablePaymentMethodPbbRequest {
	return &NullablePaymentMethodPbbRequest{value: val, isSet: true}
}

func (v NullablePaymentMethodPbbRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodPbbRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
