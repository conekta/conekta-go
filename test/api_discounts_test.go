/*
Conekta API

Testing DiscountsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package conekta_test

import (
	"context"
	"testing"

	"github.com/conekta/conekta-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_conekta_DiscountsApiService(t *testing.T) {

	configuration := conekta.NewConfiguration()
	configuration.Host = _basePath
	configuration.Scheme = "http"
	apiClient := conekta.NewAPIClient(configuration)

	t.Run("Test DiscountsApiService OrdersCreateDiscountLine", func(t *testing.T) {
		req := conekta.OrderDiscountLinesRequest{
			Amount: 1000,
		}
		resp, httpRes, err := apiClient.DiscountsApi.OrdersCreateDiscountLine(context.TODO(), "ord_2tUigJ8DgBhbp6w5D").
			OrderDiscountLinesRequest(req).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DiscountsApiService OrdersDeleteDiscountLines", func(t *testing.T) {
		resp, httpRes, err := apiClient.DiscountsApi.OrdersDeleteDiscountLines(context.TODO(), "ord_2tPAmKCEJqh8RE6nY", "dis_lin_2tQQ58HPgPw7StE8z").
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DiscountsApiService OrdersUpdateDiscountLines", func(t *testing.T) {
		req := conekta.UpdateOrderDiscountLinesRequest{
			Amount: conekta.PtrInt64(2000),
		}
		resp, httpRes, err := apiClient.DiscountsApi.OrdersUpdateDiscountLines(context.TODO(), "ord_2tPAmKCEJqh8RE6nY", "dis_lin_2tQQ58HPgPw7StE8z").
			UpdateOrderDiscountLinesRequest(req).
			AcceptLanguage("es").
			Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
