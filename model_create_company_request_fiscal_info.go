/*
Conekta API

Conekta sdk

API version: 2.2.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
)

// checks if the CreateCompanyRequestFiscalInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCompanyRequestFiscalInfo{}

// CreateCompanyRequestFiscalInfo Fiscal information for the company.
type CreateCompanyRequestFiscalInfo struct {
	// The business phone number for fiscal purposes.
	BusinessPhone *string `json:"business_phone,omitempty"`
	// The fiscal type of the company (e.g., 'moral', 'persona_fisica').
	FiscalType *string `json:"fiscal_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateCompanyRequestFiscalInfo CreateCompanyRequestFiscalInfo

// NewCreateCompanyRequestFiscalInfo instantiates a new CreateCompanyRequestFiscalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCompanyRequestFiscalInfo() *CreateCompanyRequestFiscalInfo {
	this := CreateCompanyRequestFiscalInfo{}
	return &this
}

// NewCreateCompanyRequestFiscalInfoWithDefaults instantiates a new CreateCompanyRequestFiscalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCompanyRequestFiscalInfoWithDefaults() *CreateCompanyRequestFiscalInfo {
	this := CreateCompanyRequestFiscalInfo{}
	return &this
}

// GetBusinessPhone returns the BusinessPhone field value if set, zero value otherwise.
func (o *CreateCompanyRequestFiscalInfo) GetBusinessPhone() string {
	if o == nil || IsNil(o.BusinessPhone) {
		var ret string
		return ret
	}
	return *o.BusinessPhone
}

// GetBusinessPhoneOk returns a tuple with the BusinessPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequestFiscalInfo) GetBusinessPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessPhone) {
		return nil, false
	}
	return o.BusinessPhone, true
}

// HasBusinessPhone returns a boolean if a field has been set.
func (o *CreateCompanyRequestFiscalInfo) HasBusinessPhone() bool {
	if o != nil && !IsNil(o.BusinessPhone) {
		return true
	}

	return false
}

// SetBusinessPhone gets a reference to the given string and assigns it to the BusinessPhone field.
func (o *CreateCompanyRequestFiscalInfo) SetBusinessPhone(v string) {
	o.BusinessPhone = &v
}

// GetFiscalType returns the FiscalType field value if set, zero value otherwise.
func (o *CreateCompanyRequestFiscalInfo) GetFiscalType() string {
	if o == nil || IsNil(o.FiscalType) {
		var ret string
		return ret
	}
	return *o.FiscalType
}

// GetFiscalTypeOk returns a tuple with the FiscalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyRequestFiscalInfo) GetFiscalTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FiscalType) {
		return nil, false
	}
	return o.FiscalType, true
}

// HasFiscalType returns a boolean if a field has been set.
func (o *CreateCompanyRequestFiscalInfo) HasFiscalType() bool {
	if o != nil && !IsNil(o.FiscalType) {
		return true
	}

	return false
}

// SetFiscalType gets a reference to the given string and assigns it to the FiscalType field.
func (o *CreateCompanyRequestFiscalInfo) SetFiscalType(v string) {
	o.FiscalType = &v
}

func (o CreateCompanyRequestFiscalInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCompanyRequestFiscalInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessPhone) {
		toSerialize["business_phone"] = o.BusinessPhone
	}
	if !IsNil(o.FiscalType) {
		toSerialize["fiscal_type"] = o.FiscalType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCompanyRequestFiscalInfo) UnmarshalJSON(data []byte) (err error) {
	varCreateCompanyRequestFiscalInfo := _CreateCompanyRequestFiscalInfo{}

	err = json.Unmarshal(data, &varCreateCompanyRequestFiscalInfo)

	if err != nil {
		return err
	}

	*o = CreateCompanyRequestFiscalInfo(varCreateCompanyRequestFiscalInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "business_phone")
		delete(additionalProperties, "fiscal_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCompanyRequestFiscalInfo struct {
	value *CreateCompanyRequestFiscalInfo
	isSet bool
}

func (v NullableCreateCompanyRequestFiscalInfo) Get() *CreateCompanyRequestFiscalInfo {
	return v.value
}

func (v *NullableCreateCompanyRequestFiscalInfo) Set(val *CreateCompanyRequestFiscalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCompanyRequestFiscalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCompanyRequestFiscalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCompanyRequestFiscalInfo(val *CreateCompanyRequestFiscalInfo) *NullableCreateCompanyRequestFiscalInfo {
	return &NullableCreateCompanyRequestFiscalInfo{value: val, isSet: true}
}

func (v NullableCreateCompanyRequestFiscalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCompanyRequestFiscalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


