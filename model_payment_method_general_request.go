/*
Conekta API

Conekta sdk

API version: 2.1.0
Contact: engineering@conekta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conekta

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentMethodGeneralRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodGeneralRequest{}

// PaymentMethodGeneralRequest Payment method used in the charge. Go to the [payment methods](https://developers.conekta.com/reference/m%C3%A9todos-de-pago) section for more details 
type PaymentMethodGeneralRequest struct {
	// Method expiration date as unix timestamp
	ExpiresAt *int64 `json:"expires_at,omitempty"`
	// How many months without interest to apply, it can be 3, 6, 9, 12 or 18
	MonthlyInstallments *int32 `json:"monthly_installments,omitempty"`
	// Type of payment method
	Type string `json:"type"`
	TokenId *string `json:"token_id,omitempty"`
	PaymentSourceId *string `json:"payment_source_id,omitempty"`
	// Optional, It is a value that allows identifying the security code of the card. Only for PCI merchants
	Cvc *string `json:"cvc,omitempty"`
	// Optional id sent to indicate the bank contract for recurrent card charges.
	ContractId *string `json:"contract_id,omitempty"`
	// Optional field used to capture the customer's IP address for fraud prevention and security monitoring purposes
	CustomerIpAddress *string `json:"customer_ip_address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentMethodGeneralRequest PaymentMethodGeneralRequest

// NewPaymentMethodGeneralRequest instantiates a new PaymentMethodGeneralRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodGeneralRequest(type_ string) *PaymentMethodGeneralRequest {
	this := PaymentMethodGeneralRequest{}
	this.Type = type_
	return &this
}

// NewPaymentMethodGeneralRequestWithDefaults instantiates a new PaymentMethodGeneralRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodGeneralRequestWithDefaults() *PaymentMethodGeneralRequest {
	this := PaymentMethodGeneralRequest{}
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetExpiresAt() int64 {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret int64
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetExpiresAtOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given int64 and assigns it to the ExpiresAt field.
func (o *PaymentMethodGeneralRequest) SetExpiresAt(v int64) {
	o.ExpiresAt = &v
}

// GetMonthlyInstallments returns the MonthlyInstallments field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetMonthlyInstallments() int32 {
	if o == nil || IsNil(o.MonthlyInstallments) {
		var ret int32
		return ret
	}
	return *o.MonthlyInstallments
}

// GetMonthlyInstallmentsOk returns a tuple with the MonthlyInstallments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetMonthlyInstallmentsOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthlyInstallments) {
		return nil, false
	}
	return o.MonthlyInstallments, true
}

// HasMonthlyInstallments returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasMonthlyInstallments() bool {
	if o != nil && !IsNil(o.MonthlyInstallments) {
		return true
	}

	return false
}

// SetMonthlyInstallments gets a reference to the given int32 and assigns it to the MonthlyInstallments field.
func (o *PaymentMethodGeneralRequest) SetMonthlyInstallments(v int32) {
	o.MonthlyInstallments = &v
}

// GetType returns the Type field value
func (o *PaymentMethodGeneralRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PaymentMethodGeneralRequest) SetType(v string) {
	o.Type = v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *PaymentMethodGeneralRequest) SetTokenId(v string) {
	o.TokenId = &v
}

// GetPaymentSourceId returns the PaymentSourceId field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetPaymentSourceId() string {
	if o == nil || IsNil(o.PaymentSourceId) {
		var ret string
		return ret
	}
	return *o.PaymentSourceId
}

// GetPaymentSourceIdOk returns a tuple with the PaymentSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetPaymentSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentSourceId) {
		return nil, false
	}
	return o.PaymentSourceId, true
}

// HasPaymentSourceId returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasPaymentSourceId() bool {
	if o != nil && !IsNil(o.PaymentSourceId) {
		return true
	}

	return false
}

// SetPaymentSourceId gets a reference to the given string and assigns it to the PaymentSourceId field.
func (o *PaymentMethodGeneralRequest) SetPaymentSourceId(v string) {
	o.PaymentSourceId = &v
}

// GetCvc returns the Cvc field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetCvc() string {
	if o == nil || IsNil(o.Cvc) {
		var ret string
		return ret
	}
	return *o.Cvc
}

// GetCvcOk returns a tuple with the Cvc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetCvcOk() (*string, bool) {
	if o == nil || IsNil(o.Cvc) {
		return nil, false
	}
	return o.Cvc, true
}

// HasCvc returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasCvc() bool {
	if o != nil && !IsNil(o.Cvc) {
		return true
	}

	return false
}

// SetCvc gets a reference to the given string and assigns it to the Cvc field.
func (o *PaymentMethodGeneralRequest) SetCvc(v string) {
	o.Cvc = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetContractId() string {
	if o == nil || IsNil(o.ContractId) {
		var ret string
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetContractIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given string and assigns it to the ContractId field.
func (o *PaymentMethodGeneralRequest) SetContractId(v string) {
	o.ContractId = &v
}

// GetCustomerIpAddress returns the CustomerIpAddress field value if set, zero value otherwise.
func (o *PaymentMethodGeneralRequest) GetCustomerIpAddress() string {
	if o == nil || IsNil(o.CustomerIpAddress) {
		var ret string
		return ret
	}
	return *o.CustomerIpAddress
}

// GetCustomerIpAddressOk returns a tuple with the CustomerIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodGeneralRequest) GetCustomerIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerIpAddress) {
		return nil, false
	}
	return o.CustomerIpAddress, true
}

// HasCustomerIpAddress returns a boolean if a field has been set.
func (o *PaymentMethodGeneralRequest) HasCustomerIpAddress() bool {
	if o != nil && !IsNil(o.CustomerIpAddress) {
		return true
	}

	return false
}

// SetCustomerIpAddress gets a reference to the given string and assigns it to the CustomerIpAddress field.
func (o *PaymentMethodGeneralRequest) SetCustomerIpAddress(v string) {
	o.CustomerIpAddress = &v
}

func (o PaymentMethodGeneralRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodGeneralRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.MonthlyInstallments) {
		toSerialize["monthly_installments"] = o.MonthlyInstallments
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	if !IsNil(o.PaymentSourceId) {
		toSerialize["payment_source_id"] = o.PaymentSourceId
	}
	if !IsNil(o.Cvc) {
		toSerialize["cvc"] = o.Cvc
	}
	if !IsNil(o.ContractId) {
		toSerialize["contract_id"] = o.ContractId
	}
	if !IsNil(o.CustomerIpAddress) {
		toSerialize["customer_ip_address"] = o.CustomerIpAddress
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentMethodGeneralRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentMethodGeneralRequest := _PaymentMethodGeneralRequest{}

	err = json.Unmarshal(data, &varPaymentMethodGeneralRequest)

	if err != nil {
		return err
	}

	*o = PaymentMethodGeneralRequest(varPaymentMethodGeneralRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "monthly_installments")
		delete(additionalProperties, "type")
		delete(additionalProperties, "token_id")
		delete(additionalProperties, "payment_source_id")
		delete(additionalProperties, "cvc")
		delete(additionalProperties, "contract_id")
		delete(additionalProperties, "customer_ip_address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaymentMethodGeneralRequest struct {
	value *PaymentMethodGeneralRequest
	isSet bool
}

func (v NullablePaymentMethodGeneralRequest) Get() *PaymentMethodGeneralRequest {
	return v.value
}

func (v *NullablePaymentMethodGeneralRequest) Set(val *PaymentMethodGeneralRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodGeneralRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodGeneralRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodGeneralRequest(val *PaymentMethodGeneralRequest) *NullablePaymentMethodGeneralRequest {
	return &NullablePaymentMethodGeneralRequest{value: val, isSet: true}
}

func (v NullablePaymentMethodGeneralRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodGeneralRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


